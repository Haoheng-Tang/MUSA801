plumber::plumb(file='api_add_model_var.R')$run()
addr = "1200%20W%20VENANGO%20ST"
library(tidyverse)
library(sf)
library(geojsonsf)
library(FNN)
library(tidycensus)
library(httr)
library(stringr)
base_url <- "http://api.phila.gov/ais/v1/"
endpoint <- "search/"
key      <- "?gatekeeperKey=dc953bbc4ade9d00eabf5409f6d73d3e"
url <- paste(base_url, endpoint, as.character(addr), key, sep="")
response <- httr::GET(url)
tidy_res <- httr::content(response, simplifyVector=TRUE)
if (length(tidy_res) != 4){
if(length(tidy_res$features$properties$opa_account_num)==2)
opa_account_num <-  tidy_res$features$properties$opa_account_num[2]
else
opa_account_num <-  tidy_res$features$properties$opa_account_num[1]
if(is.null(opa_account_num)){
opa_account_num <- "OPA IS NULL"
} else if(nchar(opa_account_num)==0) {
opa_account_num <- "OPA IS ZERO LENGTH"
}
}else{
opa_account_num <- "NONE FOUND"
}
opa_output <- opa_account_num
if (length(tidy_res) != 4){
if(length(tidy_res$features$properties$dor_parcel_id)==2)
Parcel_Id <-  tidy_res$features$properties$dor_parcel_id[2]
else
Parcel_Id <-  tidy_res$features$properties$dor_parcel_id[1]
if(is.null(Parcel_Id)){
Parcel_Id <- "PARCEL_ID IS NULL"
} else if(nchar(Parcel_Id)==0) {
Parcel_Id <- "0LENGTH"
} else if(nchar(Parcel_Id)>10) {
id <- tidy_res$features$properties$dor_parcel_id
Parcel_Id <- str_sub(id, 1, 10)
}
}else{
Parcel_Id <- "NONE FOUND"
}
#Census_tract&block_num
if(length(tidy_res) != 4){
if(length(tidy_res$features$properties$census_tract_2010)==2){
census_tract <-  tidy_res$features$properties$census_tract_2010[2]}
else{
census_tract <- tidy_res$features$properties$census_tract_2010
}
if(length(tidy_res$features$properties$census_block_2010)==2){
census_block <-  tidy_res$features$properties$census_block_2010[2]}
else{
census_block <- tidy_res$features$properties$census_block_2010
}
census_tract <- as.character(census_tract)
census_block <- as.character(census_block)
}else{
census_tract <- "NONE FOUND"
census_block <- "NONE FOUND"
}
if(Parcel_Id != "0LENGTH" && Parcel_Id != "NONE FOUND" &&Parcel_Id != "PARCEL_ID IS NULL"){
base <-  "https://services.arcgis.com/fLeGjb7u4uXqeF9q/arcgis/rest/services/DOR_Parcel/FeatureServer/0/query?where=BASEREG%3D%27"
##base <- "https://services.arcgis.com/fLeGjb7u4uXqeF9q/arcgis/rest/services/DOR_Parcel/FeatureServer/0/query?outFields=*&where=BASEREG%3D%27"
BASEREG <- Parcel_Id
##end <- "%27&returnCentroid=true&f=pjson"
end <- "%27&objectIds=&time=&geometry=&geometryType=esriGeometryPolygon&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=*&returnGeometry=true&returnCentroid=true&featureEncoding=esriDefault&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnUniqueIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnQueryGeometry=false&returnDistinctValues=false&cacheHint=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=false&quantizationParameters=&sqlFormat=none&f=pgeojson&token="
dor_url <- paste(base, BASEREG, end, sep="")
parcel.sf <- geojson_sf(dor_url)
parcel3857 <- parcel.sf %>%
st_transform(crs = 3857) %>%
dplyr::select(OBJECTID, geometry)
parcel.sf <- parcel.sf %>%
dplyr::select(OBJECTID, geometry)
parcel_centroid.sf <-parcel3857 %>%
st_centroid()%>%
cbind(st_coordinates(.))
if(nrow(parcel.sf)==1){
Centroid_x <- parcel_centroid.sf$X
Centroid_y <- parcel_centroid.sf$Y
Parcel_OBJECTID <- parcel.sf$OBJECTID
PARCEL <- parcel.sf$PARCEL
ADDR_SOURCE <- parcel.sf$ADDR_STD
}else if(nrow(parcel.sf) > 1){
Centroid_x <- parcel_centroid.sf$X[1]
Centroid_y <- parcel_centroid.sf$Y[1]
Parcel_OBJECTID <- parcel.sf$OBJECTID[1]
PARCEL <- parcel.sf$PARCEL[1]
ADDR_SOURCE <- parcel.sf$ADDR_STD[1]
}else{
Centroid_x <- "None Found"
Centroid_y <- "None Found"
Parcel_OBJECTID <- "None Found"
PARCEL <- "None Found"
ADDR_SOURCE <- "None Found"
}
}else{
Parcel_OBJECTID <- "Null"
PARCEL <- "Null"
ADDR_SOURCE <- "Null"
Centroid_x <- "Null"
Centroid_y <- "Null"
parcel.sf <- "Null"
}
if (is.null(Centroid_x) != TRUE && Centroid_x != "Null" && Centroid_x != "None Found"){
ParcelGeom = data.frame(x0 = c(Centroid_x),
y0 = c(Centroid_y),
Parcel_OBJECTID = c(Parcel_OBJECTID),
Parcel_Id = c(Parcel_Id))%>%
st_as_sf(coords = c("x0","y0"), crs = 3857)
x0 = Centroid_x
y0 = Centroid_y
DOR_4326 <- ParcelGeom %>%
st_transform(crs = 4326)
distance <- 100
DOR_meters <- DOR_4326 %>%
st_transform(32618) %>%
cbind(st_coordinates(.)) %>%
mutate(Xmin = X - distance,
Xmax = X + distance,
Ymin = Y - distance,
Ymax = Y + distance)
#Get Lat & Lng
DOR_latlng <- DOR_meters %>%
st_drop_geometry() %>%
dplyr::select(X, Y, Parcel_Id) %>%
st_as_sf(coords=c("X","Y"),
remove = FALSE,
crs = 32618) %>%
st_transform(crs = 4326) %>%
cbind(st_coordinates(.)) %>%
rename(LNG = X.1, LAT = Y.1)
LNG<- DOR_latlng$LNG
LAT<- DOR_latlng$LAT
#Lower-left
LL <- DOR_meters %>%
st_drop_geometry() %>%
dplyr::select(Xmin, Ymin, Parcel_Id) %>%
st_as_sf(coords=c("Xmin","Ymin"),
remove = FALSE,
crs = 32618) %>%
st_transform(crs = 4326) %>%
cbind(st_coordinates(.))
#Upper-right
UR <- DOR_meters %>%
st_drop_geometry() %>%
dplyr::select(Xmax, Ymax, Parcel_Id) %>%
st_as_sf(coords=c("Xmax","Ymax"),
remove = FALSE,
crs = 32618)%>%
st_transform(crs = 4326) %>%
cbind(st_coordinates(.))
}else{
x0 = "Null"
y0 = "Null"
LNG<- "Null"
LAT<- "Null"
}
View(parcel.sf)
parcel.sf <- geojson_sf(dor_url)
parcel.sf <- parcel.sf %>%
dplyr::select(ADDR_STD, geometry)
plumber::plumb(file='api_add_model_var.R')$run()
plumber::plumb(file='api_add_model_var.R')$run()
plumber::plumb(file='api_add_model_var.R')$run()
